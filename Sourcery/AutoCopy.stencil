{% for type in types.structs where type.implements.AutoCopy %}
{% set newFileName %}{{ type.name }}Copy{% endset %}

// sourcery:file:{{ newFileName }}
//  {{ newFileName }}.generated.swift
//

extension {{ type.name }} {
	// A default style constructor for the .copy fn to use
	init(
	{% for variable in type.storedVariables %}
		{{variable.name}}: {{variable.typeName}},
	{% endfor %}
		// This is to prevent overriding the default init if it exists already
		forCopyInit: Void? = nil
	) {
	{% for variable in type.storedVariables %}
		self.{{variable.name}} = {{variable.name}}
	{% endfor %}
	}

	// struct copy, lets you overwrite specific variables retaining the value of the rest
	// using a closure to set the new values for the copy of the struct
	public func copy(_ build: (inout Builder) -> Void) -> {{ type.name }} {
		var builder = Builder(original: self)
		build(&builder)
		return builder.to{{ type.name}}()
	}

	public struct Builder {
		{% for variable in type.storedVariables %}
		public var {{variable.name}}: {{variable.typeName}}
        	{% endfor %}

		fileprivate init(original: {{type.name}}) {
			{% for variable in type.storedVariables %}
			self.{{variable.name}} = original.{{variable.name}}
			{% endfor %}
		}

		fileprivate func to{{type.name}}() -> {{type.name}} {
			return {{type.name}}(
				{% for variable in type.storedVariables %}
				{{variable.name}}: {{variable.name}}{{ ', ' if not forloop.last }}
				{% endfor %}
			)
		}
	}

}

// sourcery:end

{% endfor %}
